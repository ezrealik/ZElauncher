<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        9P/+/v7//v7+//////+rq6v/AwMDpwAAACcEBATuKisq/8HBwf/y8fH/+fn5/8DAwf8wMjn/HiEq/xUY
        I/8VGCP/FRgj/xUYI/8YGyX/Jigw/yosNf9PU1z/TlFZ/2pvdv9lam//DxAQ/xYWFvlISEj/qKio//X1
        9f////////////b29v96enr+CgoKqgAAABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AC4ODg7Ac3Nz/9fX1//6+vr//v7+///////+/v7/np6e/wMDA+QODg7/a2xr/+3t7f/a2tr/0NDQ/7Oz
        tf81Nz//Gh0n/xUYI/8VGCP/FRgj/xUYI/8WGSP/Fhkk/ykrM/9WWmH/am93/21ye/9vdHz/Iycp/35+
        fv+2trb/9/f3//7+/v//////0dHR/zU1NekEBARhAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAANBgYGfjw8PO+np6f/2NjY/+np6f/7+/v/9fX1/0tKSf8xMzL/tbW1/93d
        3f9DRUz/VVZc/x0fKv8UFyL/FBci/xUYI/8WGST/FRgj/xUYI/8VGCP/FRgj/xUYI/8XGST/ODtE/2Jm
        b/9rcHn/QEdN/6qqqv/9/f3/9/f3/8nJyf92dnb7ExMTswAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAACYAAAB8Gxsb0n5+fv7U1NT/7+/v/5GR
        jf9zdnX/0dHR/2lqcP8VGCP/FBci/xQXIv8UFyL/FRgj/z5AR/9NTlL/aWpu/zI0O/8VGCP/FRgj/xUY
        I/8UFyL/BQYS/xQVH/9iZ2//aG51/5SXl//V1dX/RUVF7gQEBJYAAABFAAAABgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQUF
        BZBKSkr9j4+P/2RlYP+Jiov/ysrK/19gZv8UFyL/FRgj/xodKP9KS1H/LS82/35+f/9ycnX/UlRZ/5+f
        oP8oKzT/amtv/yksNf8VGCP/DhAc/xweKP9nbHT/e3+H/5OVl/8iIiLoAAAALQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAA8EREQ/zY4N//V1dX//Pz8/1tdY/8eISv/bm91/9DQ0f/4+Pj/4eHh//Ly
        8v92d3v/19fX/2JjaP+8vL3//v7+/+7u7v+goKP/LS84/zQ2Qv9VWWD/ZWhv/4SIiv8jIyLiAAAAEgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBAQE4DQ2Nv/W1tb/6+vr/4eHi//S0tL/1dTU//T0
        9P/6+vr//Pz8/7SztP9HSU//8PDw/+rq6v/9/f3////////////+/v7/7u7u/3t9gv9qb3f/WVxj/4iL
        j/8xMjLwAAAAHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBQUF9ENGRf+0trX/xMfG/8zO
        zv+ztLT/ioyM/5udnf+mp6j/oaOk/7q8u/+2ubn/1NfW/9rd3P/Z29v/3+Lh/9/i4f/f4uH/4OLi/7e6
        vP9rcHf/eHyB/6eqrP9JSkr9AAAAKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACCAcG7SYn
        JP8uLyz/LzEw/zY4OP87PT3/YWJf/4mKhP+IiIP/i4uG/1JUUv89QD//PkBA/0BDQv+Bgn3/iouG/4qL
        hf99fnn/QEJC/0RHR/9iZGf/Z2lq/2lqav80NTT2AAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAPgAAAOYAAAD/BwgM/xETHP8uMDj/2djY/+Dg4P/Av8D/fX6D/x8iK/8VGCP/FRgj/xUY
        I/9XWV7/qamr/9XV1f/p6en/bG1x/yMmMf9XV1//JSUn/wAAAPUAAABbAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAADQICAu8NDAz/Hh0b/zc1M/8/PDr/QD07/z07Of88Ojj/PTs5/zo4
        Nv86Nzb/Ozg3/zk3Nf8+Ozn/PDo4/z07Of89Ojn/QT88/0NBP/88Oz3/RURH/yMjJf8AAAAxAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwICA/AYFhT/QTw1/2hiWf9xa2L/V1FI/1dR
        SP9WUEf/ZmFY/6+rpf/V08//2NbS/7q3sv9ybWX/VU9G/1dRSP9WUEf/Pzs1/z47Nf80Mi//cG9u/z4+
        P/8AAAA2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAYgsLC/khHxz/TEc//5CL
        gf+TjYT/WFJJ/1ZQR/92cGn/5OPh/8nM1f+Ql7v/iZC4/7u/zf/m5eX/joqD/1VPRv9UTkX/JiQi/x8e
        HP8vLiz/f359/zw8Pv8AAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAACcBAQGxIiIi/0ND
        Q/87ODP/UkxE/2dhWP9taF//VlBH/15YUP/g39z/uL7L/4GNwv9GSKT/Njed/3iDv/+nsMb/5eXj/3Br
        Y/9WUEf/UEtC/yooJf8rKij/ZmVl/ysrLf8CAgJZAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAA6AQEBqhUV
        Ffo0NDT/bW1t/6enp/9PTEf/U01E/1ZQR/9WUEf/VVBH/5iTjP/b3N//PEOc/8PJ5P/P1On/rbPZ/+Hl
        8v87P57/trrL/7q3sf9UTkX/XlhO/y8tKv8jIiD/Q0JC/83Oz/91dXX/FBQU0QAAAF8AAAANAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAASQgI
        CNMcHBz5V1dX/3x8fP+AgID/6+vr/+rq6v+Rj43/UEpC/1RORv9WUEf/VU9G/7Ovqv+ts8f/Ix+R/0hL
        pv/t8Pf/+vv9/2dutv8iHZH/hYy0/9PQzP9XUUj/kIuC/0tKSf8zMjD/ampr/+bm5v/b29v/zs7O/2dn
        Z/0iIiLnBQUFfgAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAA
        AFcHBwfFJCQk+lhYWP+ioqL/i4uL/4KCgv/U1NT/39/f/7q6uv9WVlb/NzMv/0tFPv9WUEf/VE5G/7Ow
        qv+ss8b/Ix+R/zg5nf/k6PP/+vv9/1Vbrf8iHZH/hIuz/9PRzf9VT0b/enVt/1ZVVP91dHT/oqKj/+zs
        7P+bm5v/f39//6+vr//S0tL/kZGR/isrK+EEBASCAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAsBAQFkCQkJ0T8/P/6enp7/xsbG/9bW1v/j4+P/19fX/9jY2P9nZ2f7FBQUtgAAAHYAAACOEBAQ/jg1
        L/9RS0P/VU9G/5qVjv/Y2t3/NzuZ/6iu1v/j5vL/tr3e/9nd7f83PJv/srfK/7y5s/9VT0b/XVhR/39+
        ff+Eg4T/CQkJ2URERO2urq7/4ODg/8zMzP/z8/P/5OTk/+zs7P+ampr/LS0t7AoKCowAAAAiAAAAAAAA
        AAAAAAAAAAAAEQMDA7ksLCz/n5+f/9PT0/9ycnL8FRUVxA4ODtFfX1//VVVV+AgICKwAAAA7AAAAAAAA
        AAAAAAAKAQEBwh4cGv9EPzj/U05F/2BaUv/l5OH/oqrB/3yHwP9UWav/OTqe/3qEv/+apcH/5eXk/3Zx
        af9oY1v/iIaC/5qamv8jIyTpAAAAIAAAABoAAACDMTEx6G9vb/8mJib1BAQEq0lJSfKrq6v/zc3N/6en
        p/8zMzPqAAAAPAAAAAAAAAAAAwMDkTY2Nv+qqqr/vb29/xAQEM0AAABAAAAAAwAAAAUAAAAgAAAAHQAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAIAICA9skIiD/SUQ8/1RORf99eHD/6Ojm/8PG0f+FjLX/fYSy/7O4
        yf/o6Of/op6Y/3hzbP+cmZT/kpKR/ywsLewCAgJAAAAAAAAAAAAAAAAAAAAADgAAACoAAAALAAAAAQAA
        AB8HBweUUVFR/+Tk5P/a2tr/LS0t4gAAAAsAAAAAAgICaSAgIOxlZWX/c3Nz/woKCo4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQBAQLLFxcX/UA8N/9YU0r/enVt/8G/
        uv/h4N7/5OPi/9HPzP+fnJb/kI2H/5mWk/9ra2v/FxcY5wICAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAyMDAw/3Jycv9LS0v1FhYWtAAAAAcAAAAAAAAAAgAAACMeHh7czs7O/wsL
        C7cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAfQMD
        BOQUFBX9NDIx/0tJR/9gXVr/aWZj/2VkYv9dXFv/QUFB/xoaG/ICAgKWAAAAIQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbampq/3V1df8AAABVAAAACQAAAAAAAAAAAAAAAAAA
        AAAGBgaFHx8f5AICAkwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAUAAABBAAAAYwAAAIcAAACXAAAAmQAAAIwAAABsAAAATAAAACEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYFBQUvREREdEAAAAPAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////9FQf///////0VB////////
        RUH///////9FQf///////0VB////////RUH///////9FQf///////0VB////////RUHw//gD/wdFQeB/
        4AH/A0VBwD/AAP4DRUGAP4AAfAFFQYAfAAA4AUVBgA4AADAARUGABgAAAABFQcACAAAAAUVB4AAAAAAH
        RUH4AAAAAA9FQfwAAAAAP0VB/gAAAAB/RUH/wAAAA/9FQf/gAAAD/0VB//AAAAP/RUH/8AAAA/9FQf/w
        AAAD/0VB//gAAAP/RUH/+AAAB/9FQf/4AAAH/0VB//AAAAf/RUH/wAAAA/9FQf8AAAAA/0VB/AAAAAA/
        RUHwAAAAAA9FQcAAAAAAA0VBgAYAAAABRUGADwAAOABFQYP/gAB/wEVBg//AAP/BRUHj//AD/8NFQf//
        /////0VB////////RUH///////9FQf///////0VB////////RUH///////9FQf///////0VB////////
        RUE=
</value>
  </data>
</root>